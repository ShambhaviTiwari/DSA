from os import *
from sys import *
from collections import *
from math import *
#optimal

def zeroMatrix(matrix, n, m):
    col1 = 1
    for i in range(n):
        for j in range(m):
            if matrix[i][j] == 0:
                matrix[i][0] = 0
                if j != 0:
                    matrix[0][j] = 0
                else:
                    col1= 0

    for i in range(1,n):
        for j in range(1,m):
            if matrix[i][0] == 0 or matrix[0][j] == 0:
                matrix[i][j] = 0

    if matrix[0][0] == 0:
        for j in range(m):
            matrix[0][j] = 0
    
    if col1 == 0:
        for i in range(n):
            matrix[i][0] = 0
    return matrix


                






#better
# def zeroMatrix(matrix, n, m):
#     row = [None]*n
#     col = [None]*m

#     for i in range(n):
#         for j in range(m):
#             if matrix[i][j] == 0:
#                 row[i] = 1
#                 col[j] = 1
#     for i in range(n):
#         for j in range(m):
#             if row[i] == 1 or col[j] == 1:
#                 matrix[i][j] = 0
#     return matrix
    













#brute
# def markrow(i,j,matrix,n):
#     for i in range(n):
#         if matrix[i][j] != 0:
#             matrix[i][j] = -1
# def markcol(i,j,matrix,m):
#     for j in range(m):
#         if matrix[i][j] != 0:
#             matrix[i][j] = -1

# def zeroMatrix(matrix, n, m):
#     # Write your code here.
#     for i in range(n):
#         for j in range(m):
#             if matrix[i][j] == 0:
#                 markrow(i,j,matrix,n)
#                 markcol(i,j,matrix,m)
#     for i in range(n):
#         for j in range(m):
#             if matrix[i][j] == -1:
#                 matrix[i][j] = 0
#     return matrix

    
